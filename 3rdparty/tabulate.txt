A crude tool to import/export certain OHRRPGCE data lumps from/to csv files/spreadsheets. Tested with Libre Office and KSpreadsheet
Public Domain license.

Instructions:

* Upgrade your RPG file using Custom. Gorgonzola (May 2020) is currently supported,
  an .rpg which is a little older or newer than this is likely to work too.
* Backup your game if importing data! This is not exactly thoroughly tested.
* Unlump your RPG file (using the unlump tool, Custom, or even nohrio!)
* Optionally edit the script to change the exported data fields
* Export data, eg.
   tabulate.py --type items --export vikings.rpgdir items.csv
* Import the csv file into your favourite spreadsheet editor (you could import it directly into a different RPG file, but it would be so much simpler to just copy the lump)

You now have a spreadsheet with one row per record, column names in the first row, and one column per data field. You can delete columns, rearrange columns, add new columns with blank headers, and change the number of rows. When importing, the script ignores columns with blank names, and leaves unchanged any data fields for which the column is missing. Column names must be unchanged to be recognised, but they can be in any order.

* Look at the relevant file format documentation page on the wiki:

Items: http://rpg.hamsterrepublic.com/ohrrpgce/ITM
Enemies: http://rpg.hamsterrepublic.com/ohrrpgce/DT1
Attacks: http://rpg.hamsterrepublic.com/ohrrpgce/DT6
Textboxes: http://rpg.hamsterrepublic.com/ohrrpgce/SAY

Importing hero data is not supported since December 21, 2012 nightlies. (If you really wanted to, you would have to delete the heroes.reld lump.)
Obsolete Heroes: http://rpg.hamsterrepublic.com/ohrrpgce/DT0

You'll need these to make sense of the contents of each cell. The data fields will be in the same order in the spreadsheet and on the wiki. For example, for items, "oobuse" is "When used out of battle", and a value of 6 in a cell in this column means attack 5. If you use a string which is longer than supported by the field, then it'll silently be cut short while importing. You'll always see fields for 64 elements, regardless of the number actually enabled in the game. Bitset fields are exported as a single column. Each bitfield cell contains the numbers of the set bits (ignoring obsolete or unused bits) comma separated, or in some cases names of the set bits instead. Examples of bit names are 'rename on add', 'Bob' (the name of a hero) or 'hero 3' (if the hero name is blank).

* Make changes
* Export the spreadsheet as a csv file. Make sure it's in the same format as originally exported: comma delimiters, quotes around strings if required.
* Before importing (into any unlumped RPG), make sure it has been upgraded to the latest file format, and there are at least as many records (items, heroes, etc) already in the game as there are in the spreadsheet: nohrio can not create new records.
