nohrio
======

nohrio is a project designed to facilitate `OHRRPGCE http://gilgamesh.hamsterrepublic.com/wiki/ohrrpgce/index.php/Main_Page`
data manipulation utilities and human inspection of data, by providing:

* Object oriented interface to standard lump/record types
* Remembers where a record was taken from, so it's easy to write it back.
* Int subclasses with more human-readable representations
  for common reference types, eg. TagCheck, HeroID

Requirements: 

* Python 2.7 minimum. Python 3.x for the new API.
* See requirements.txt for a list of Python modules that nohrio depends on.
  * You can install them using the 'init' Makefile target,
    ie 'make init' (on my Linux system I prefer to 'sudo make init', since I want them installed systemwide.
  * Auto-installation of dependencies requires 'pip'. If you don't already have pip,
    install it already :) 
* A checkout or symlink to a checkout of OHRRPGCE svn is needed
  for running the tests (they use data from the 'vikings' rpg provided)
  You can make that symlink by being in the nohrio root directory,
  and using `ln -s /absolute/path/to/my/checkout/of/ohrrpgce ohrrpgce'
* If you're modifying parts of nohrio that use `cog`,
  you need to have 'cogapp' installed so you can regenerate the relevant parts.
  * I normally invoke cog as 'cog.py -ce' and copy/paste the resultant output. 
    For large files or amounts of generated code,
    you might want to add the '-r' parameter to directly replace the source file.
  * Don't modify code between '#[[[cog ... ]]]' and '#[[[end]]]' comments, it is autogenerated.

Setuptools or Distribute are required; if you don't have one of them, setuptools will automatically
be installed when you run ``python setup.py build``

For building docs, requires Sphinx, SCons, and PyLit
(http://pylit.berlios.de/)

Updating from gitorious
-----------------------

Chances are that you got your copy of nohrio via ``git clone git://gitorious.org/nohrio/nohrio.git``.

In case you don't know how to update it, this is how; run the following command in the nohrio directory:

``git pull --rebase``

If you are doing your own development on a branch (recommended),
you will want to switch back to 'master' branch before running ``git pull --rebase``,
using the command ``git checkout master``
(and probably switch back to your branch with 'git checkout <yourbranchname>' afterwards,
maybe after checking out the ``git log`` to see what is new)



Quickstart
----------

You can install the package using either ``python setup.py install``
or ``python setup.py develop`` (the second is mainly useful when you
want to make changes to nohrio and you want the installed nohrio module
to always be up-to-date with your changes, no need to keep running
``python setup.py install``.
On linux you will need to prepend ``sudo`` to those commands
(or otherwise be root when running them)

<FILL IN DETAILS FOR NEW API HERE>

Building docs
-------------

Make sure you have the specified dependencies installed (Sphinx, SCons, PyLit).
Sphinx and SCons can be installed using ``easy_install Sphinx`` and ``easy_install SCons``

PyLit must be downloaded and installed manually
(place 'pylit.py' and 'pylit' files somewhere in your PATH,
``chmod +x pylit`` if you're using Linux or MacOSX)

Changing directory to doc/ and
running ``scons rst html`` will ensure you have fully up-to-date documentation in
doc/build/html/index.html


Building html from this file
----------------------------

Yes, this is written in ReStructured Text too :) If you have docutils installed
(hint: if Sphinx is working, you do have docutils installed :),
you can generate an html page from this file using the command
'rst2html.py README > readme.html' (and presumably open the resulting file in your web browser)



Credits
-------

James Paige :
  Created the OHRRPGCE, through which I have learnt a surprising amount about fileformats.
  James would tell you not to use it as an example! And I would agree --
  it's a better counterexample. James is also a really nice guy.

Fenrir-Lunaris :
  Created Vikings of Midgard, for which part of it's aim is to show off features.
  Gave me permission to use VoM lumps for my test suite, for which they are ideal for aforementioned
  reasons (And well, I like the game).
  Also an artistic inspiration, as both an example and counter-example.

TeeEmCee :
  Initial testing and feedback. It's easy, in your own intimate knowledge of a software
  system you created, to be completely out of touch with 'what things people
  need to know'. He helped remedy that, and spotted a Windows-only bug :)
  Also wrote the first non-trivial program that uses nohrio -- 'colouruse.py' which counts
  usage of master palette colors throughout an RPGDir.

  Further testing and suggestions on the RELOAD module later.

Myself :
  Wrote quite a few utilities for OHRRPGCE, and made the new master palette for it
  with a good deal of research and experimentation. Without those I would never have made these,
  this is a total paradigm shift (my old utilities were written when OHR ran on DOS :)

A vast array of XML-abusers:
  Tremendously effective counter-examples. XML is not a Data Language, it's a Markup Language!

.. _systemantics: http://en.wikipedia.org/Systemantics
