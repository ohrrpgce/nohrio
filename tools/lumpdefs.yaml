# OHRRPGCE data type definitions
# ===============================
#
# Conventions
# ~~~~~~~~~~~
#
# * minimize comments
# * maximize explicitness
#
---
# Data Definition
# ~~~~~~~~~~~~~~~~
#
__datadef:
   ATTRNAME: (str matching '[a-z][a-z0-9_]+')
   DESCRIPTION: (str)
   DTYPE: [dtypeid (str), params (list|int)]
   RANGE: [min (int), max (int)]
   BITSETDEF: [ATTRNAME, DESCRIPTION]
   ENUMDEF:
            'dtype' : DTYPE ||
            'range' : RANGE ||
            (EXPRESSION) : FORMATSTRING
   PREDEF:
            (name): DTYPE | RANGE ||
            'ENUMERATIONS': (map(:ENUMDEF+)) ||
            'BITSETS': (map(:BITSETDEF+))
   COMPLEX_DTYPE:
      name_regex : '[a-z][a-z0-9_]+'
      type : map
      fields:
         attrname:
            required : true
            desc : Name of attribute
         alldtype:
            type: DTYPE | COMPLEX_DTYPE
            desc: Assign the given dtype to all fields
                  which have not already had a dtype assigned
         defaults:
            type: seq
            desc: default values for all specified fields, in order.
                  expressions are permitted.
         fields:
            type: seq (str,map)
            desc: string listing all fields, followed by dtype definition
            map:
                'NAME' : specify a dtype (possibly indirect, as in an enumeration)
                '*' : Specify a default dtype for all fields
                '*[]' : Specify a default range for all fields
                'NAME[]' : Specify a range for NAME (where NAME is a field name)
         index:
            type: str (EXPRESSION)
            desc: start index (evaluated each time a lump handle is requested).
                  Usually used with a multi-item lump like DOX
         flags:
            type: str (FLAG+)
            FLAG:
               REQUIRED:
                             - Necessary to make sense of the RPG.
                               if the lump is missing, it suggests a bad RPG.
                             - suggests: BASE
               MANUALFLUSH:
                             - Changes won't be written to disk
                               until the data handle is garbage-collected,
                               or manual call of flush()
               PLANAR:
                             - Use a planar (AAABBBCCC) rather than
                               atomic (ABCABCABC) data layout
                             - requires: alldtype shape
         part:
            type: seq (index (int), destdtype (str))
            desc: dtype describes a partial data, which should
                  be concatenated with others to produce
                  a final result. Intended specifically for
                  ATTACK.BIN.
            requires: MANUALFLUSH
         owner:
            type : str (EXPRESSION)
            desc : What to attach attribute to
         shape:
            type: seq (int+) | int
            desc: As in numpy.
                  Used to specify partial slices of larger lumps, mostly.
   ROOTKEY:  COMPLEX_DTYPE | PREDEF
#
########################################################
##
#
## #
##########  Predefinition of limits, building blocks.
## #
#
##
BLOADO: &BLOADO 7
SHORT: &SHORT int16
MINSHORT: &MINSHORT -32768
MAXSHORT: &MAXSHORT 32767
USHORT : &USHORT uint16
MAXUSHORT: &MAXUSHORT 65535
UBYTE : &UBYTE uint8
B6R : &B6R [0, 63]
B8R : &B8R [0, 255]
SHORTR : &SHORTR [*MINSHORT, *MAXSHORT]
USHORTR : &USHORTR [0, *MAXUSHORT]
MAXHERO: &MAXHERO 60
HEROR : &HEROR [-60, 60]
MAXSHOP : &MAXSHOP 99
MAXSHOPITEMS : &MAXSHOPITEMS 50
MAXITEM : &MAXITEM 32000
ITEMR : &ITEMR [-32000, 32000]
MAXONETIMENPC : &MAXONETIMENPC 1000
MAXGFX : &MAXGFX 32767
MAXBG : &MAXBG 32767
MAXTILESET : &MAXTILESET 32767
MAX16PAL : &MAX16PAL 32767
MAX256PAL : &MAX256PAL 32767
MAXMAP : &MAXMAP 32767
MAXMAPLAYER : &MAXMAPLAYERS 7
MAXSONG : &MAXSONG 32767
MAXSFX : &MAXSFX 32767
MAXNPC : &MAXNPC 100
MAXNPCINSTANCE : &MAXNPCINSTANCE 300
MAXDOOR : &MAXDOOR 100
MAXDOORLINK : &MAXDOORLINK 200
MAXATTACK : &MAXATTACK 32767
MAXENEMY : &MAXENEMY 32767
MAXFORMATION : &MAXFORMATION 32767
MAXFORMATIONSET : &MAXFORMATIONSET 32767
MAXSPELLLIST : &MAXSPELLLIST 4
MAXSPELLS : &MAXSPELLS 24
MAXVEHICLE : &MAXVEHICLE 32767
MAXSCRIPT : &MAXSCRIPT 32767
TAGR : &TAGR [-1000, 1000]
MAXTAG : &MAXTAG 1000
MAXMONEY : &MAXMONEY 2000S000000

PTMERGE : &PTMERGE
   dtype : uint8
   flags : PACKED4BPP IMAGE
   owner : rpg.gfx
DEFPALMERGE: &DEFPALMERGE
   owner: rpg.defpal
   dtype : *SHORT
   range : [0, *MAX16PAL]
   softrange : rpg.pal16 # limited to len (rpg.pal16)

TEXTLINE : &TEXTLINE "%s\n"

RGB6: &RGB6 # used or not?
   fields: [r g b, {RANGE : *B6R}]
   ALLDTYPE: *UBYTE

RGB8: &RGB8
   fields : [r g b, {RANGE : *B8R}]
   ALLDTYPE: *UBYTE

RGB6W: &RGB6W
   flags : WASTEDHALF # Only one byte of a N-byte dtype is actually used
   fields : [r g b, {RANGE : *B6R}]
   ALLDTYPE: *USHORT

XYCOORD:
   fields : [x y, {RANGE : *SHORTR}]
   ALLDTYPE: *SHORT

STATS:
   fields : [hp mp str acc def dog mag wil spd ctr foc xhits, {RANGE: *SHORTR}]
   ALLDTYPE: *SHORT

STATS0_99:
   fields : [hp mp str acc def dog mag wil spd ctr foc xhits, {RANGE: *SHORTR}]
   ALLDTYPE: [*SHORT, 2]
##
#
## #
##########  Bitsets, enumerations and related weird variants
## #
#
##

BITSETS:
   BFIXBITS: &BFIXBITS
      # 0
      - [attack_items, Zeroed out item cost (ammunition) data in ATTACK.BIN]
      - [weapon_points, Fixed hero hand positions in DT0]
      - [stun_cancel_targ, Turned on "Cancel Target's Attack" bit in ATTACK.BIN for old attacks that damage the Stun register]
      - [default_dissolve, Initialized genEnemyDissolve to default in GEN]
      - [default_dissolve_enemy, Initialized Enemy dissolves to default in DT1]
      - [pushnpc_bugcompat, Turned on the Simulate pushable NPC obstruction bug bitset]
      - [default_maxitem, Stored default max item number from ITM in GEN]
      - [blank_doorlinks, Marked redundant blank doorlinks as unused]
      # 8
      - [shop_sounds, Initialized all the sound effects from gen.itemlearnsfx to gen.cantsellsfx (to one of gen.acceptsfx or gen.cancelsfx))]
      - [extended_npcs, Initialized all blank NPC data in the empty space at the end of .N## lumps]
      - [hero_portrait, Initialized Hero portrait data]
      - [textbox_portrait, Initialized text box portrait data]
      - [npclocation_format, Converted NPC locations to new format (FIXME: not implemented yet)]
      - [init_damagedisplay, Initialize default values for damage display time and distance in GEN]
      # 14
   BMENUITEM: &BMENUITEM
      - [hide_when_disabled, Hide when disabled]
      - [close_menu, Close menu when selected]
      - [no_onclose, Don't run on-close script]
   BTEXTBOX : &BTEXTBOX
      - [choicebox, Enable Choicebox]
      - [nobox, Disable Box]
      - [notrans, Disable Translucency]
      - [restoremusic, Enable Restore Music]
      - [portraitbox, Show A Box Around Portrait]
      - [stopsfx, Stop Sound FX When Box Advances]
      # 2 unused
ENUMERATIONS:
   ETAGCHECK: &ETAGCHECK
      flags : ENUM
      dtype : *SHORT
      range : TAGR
      N>=0 : [tag$(N)_on, Tag $N == ON]
      N<0 : [tag$(N)_off, Tag $N == OFF]
   ETAGSET: &ETAGSET
      flags : ENUM
      dtype : *SHORT
      range : TAGR
      N>=0 : [tag$(N)_on, Tag $N = ON]
      N<0 : [tag$(N)_off, Tag $N = OFF]
   EHERO_SPELLLIST : &EHERO_SPELLLIST
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [spells_mp, Spells (MP Based)]
      1 : [spells_levelmp, Spells (FF1 Style)]
      2 : [random, Random Effects]
      3 : [item, Item Consuming]
   ENPC_MOVETYPE : &ENPC_MOVETYPE
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [standstill, Stand Still]
      1 : [    wander, Wander]
      2 : [      pace, Pace]
      3 : [ rightturn, Right Turns]
      4 : [  leftturn, Left Turns]
      5 : [randomturn, Random Turns]
      6 : [     chase, Chase You]
      7 : [     avoid, Avoid You]
      8 : [   inplace, Walk In Place]
   ENPC_SPEED : &ENPC_SPEED
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [0, '0']
      1 : [1, '1']
      2 : [2, '2']
      3 : [10, '3']
      4 : [4, '4']
      5 : [5, '5']
   ENPC_ACTIVATED : &ENPC_ACTIVATED
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [     changedir, Change Direction]
      1 : [    faceplayer, Face Player]
      2 : [dontfaceplayer, Do Not Face Player]
   ENPC_PUSHABILITY : &ENPC_PUSHABILITY
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [       off, 'Off']
      1 : [      full, Full]
      2 : [horizontal, Horizontal]
      3 : [  vertical, Vertical]
      4 : [        up, Up Only]
      5 : [     right, Right Only]
      6 : [      down, Down Only]
      7 : [      left, Left Only]
   ENPC_ACTIVATION : &ENPC_ACTIVATION
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [   use, Use]
      1 : [ touch, Touch]
      2 : [stepon, Step On]
   EPORTRAITTYPE : &EPORTRAITTYPE
      flags : ENUM
      dtype : *SHORT
      range : auto
      0 : [none, 'None']
      1 : [fixed, Fixed]
      2 : [hero_caterpiller, Hero By Caterpillar]
      3 : [hero_slot, Hero By Party Slot]
   ETEXTBOX_BOXORSCRIPT : &ETEXTBOX_BOXORSCRIPT
      flags : ENUM
      dtype : *SHORT
      range : *SHORTR
      N>=0 : [textbox$N, Textbox $N]
      -16384<N<0 : [script$(-N), Run script $(-N)]
      N<-16384 : [trigger$(N+16384), Trigger $(N+16384)]
   ESHOPORINN : &ESHOPORINN
      flags : ENUM
      dtype : *SHORT
      range : [*MINSHORT, *MAXSHOP]
      0 : [restore, Restore HP/MP]
      N>0 : [shop$N, Enter Shop $N]
      N<0 : [inn$N, Enter Inn Costing $(rpg.strings.money)$N]
   EADDHERO : &EADDHERO
      flags : ENUM
      dtype : *SHORT
      range : *HEROR
      0: [nothing, Do Not Add/Remove Heros]
      N>0 : [add$N, Add Hero $N To The Party]
      N<0 : [remove$N, Remove Hero $N From The Party]
   EADDITEM : &EADDITEM
      flags : ENUM
      dtype : *SHORT
      range : *ITEMR
      0: [nothing, Do Not Add/Remove Items]
      N>0 : [add$N, Add Item $N To Inventory]
      N<0 : [remove$N, Remove Item $N From Inventory]
   ESWAPHERO : &ESWAPHERO
      flags : ENUM
      dtype : *SHORT
      range : *HEROR
      0: [nothing, Do Not Swap In/Out Heros]
      N>0 : [add$N, Swap Hero $N In]
      N<0 : [remove$N, Swap Hero $N Out]
   ELOCKHERO : &ELOCKHERO
      flags : ENUM
      dtype : *SHORT
      range : *HEROR
      0: [nothing, Do Not Lock/Unlock Heros]
      N>0 : [add$N, Unlock Hero $N]
      N<0 : [remove$N, Lock Hero $N]
##
#
## #
##########  Actual lump definitions
## #
#
##
archinym.lmp:
   attrname : archinym
   fields : [prefix version, {}]
   defaults : [$rpgprefix, nohrio version $nohrioversion]
   hdf5_transform :
      - - attribute_transform # prefix, version
        - path : /            # <-> attributes attached to /
          prefix : editor_    # named editor_(prefix|version)
   yaml_transform :
      - - keymap
      - - keyunmap
   loadpriority : 1
   flags: REQUIRED
          FULL_REWRITE_ON_CHANGE
          MUST_UNLUMP_BEFORE_WRITING
          SINGLE_RECORD
          SINGULAR
   alldtype: *TEXTLINE
attack.bin:
   XXX
binsize.bin:
   attrname : binsize
   fields :
      - attack stf songdata sfxdata map menu menuitem uicolor say npcdef
      - '*' : *SHORT
   flags : BASE
           AUTOSIZE
           SINGULAR
   expected_size : '% 2'
   hdf5_transform :
      - - copy
        - path : /redundant/binsize
      - - XXX # reverse transform
        - XXX
   yaml_transform :
      - - keymap
      - - keyunmap
d:
   owner : Map
   attrname : doorlinks
   fields :
            - srcdoor destdoor destmap condtag1 condtag2
            - '*[]': *SHORTR
              '*' : *SHORT
   flags: PLANAR
          MAPINDEXED
   maplumpindex: $owner.n
   shape: 200
defpal0.bin:
   << : *DEFPALMERGE
   attrname: hero
   nameindex : pt0
defpal1.bin:
   << : *DEFPALMERGE
   attrname: enemy_smal
   nameindex : pt1
defpal2.bin:
   << : *DEFPALMERGE
   attrname: enemy_med
   nameindex : pt2
defpal3.bin:
   << : *DEFPALMERGE
   attrname: enemy_big
   nameindex : pt3
defpal4.bin:
   << : *DEFPALMERGE
   attrname: walk
   nameindex : pt4
defpal5.bin:
   << : *DEFPALMERGE
   attrname: weapon
   nameindex : pt5
defpal6.bin:
   << : *DEFPALMERGE
   attrname: attack
   nameindex : pt6
defpal7.bin:
   << : *DEFPALMERGE
   attrname: textbox
   nameindex : pt7
defpal8.bin:
   << : *DEFPALMERGE
   attrname: portrait
   nameindex : pt8
dox:
   owner : Map
   attrname : doors
   fields :
            - x y bitsets
            - '*[]': *SHORTR
              '*' : *SHORT
   flags: PLANAR
   index: [$owner.n]
   shape: 100
gen:
   owner : RPG
   attrname : general
   flags : REQUIRED
           SINGULAR
   loadpriority : 2
   hook : checkpassword ($self.,$self.)
   offset : *BLOADO
   expected_size : 1007
   fields: maxmap title titlemusic victorymusic battlemusic
           passcode_version passcode_rotator newpasscode newpasscode_unused
           oldpasscode
           maxheropic maxenemy1pic maxenemy2pic maxenemy3pic maxnpcpic
           maxweaponpic maxattackpic
           maxtileset maxattack maxhero maxenemy maxformation
           maxpal16 textbox','plotscript']),
                  'newgamescript gameoverscript max_regularscript suspendbits cameramode',
                  'camera_args scriptbackdrop time maxvehicle maxtagname',
                  'loadgamescript textbox_backdrop enemydissolve enablejoy',
                  'poison stun damagecap mute statcap maxsfx masterpal',
                  'maxmasterpal maxmenu maxmenuitem maxitem max_boxborder',
                  'maxportrait maxinventory reserved',
                  'oldpassword2_offset oldpassword2_length version startmoney',
                  'maxshop oldpassword1_offset oldpassword1_length maxbackdrop',
                  'bitsets startx starty startmap onetimenpc_indexer',
                  'onetimenpc_bits',
                  'def_deathsfx maxsong acceptsfx cancelsfx choosesfx textboxletter',
                  'morebitsets itemlearnsfx cantlearnsfx buysfx hiresfx sellsfx',
                  'cantbuysfx cantsellsfx damagedisplayticks damagedisplayrise',
                  'wastedspace oldsctable_head oldsctable unused',

lookup%d.bin:
   attrname : triggers
   fields :
            - id name
            - id : *SHORT
              name: [str16_8, 36]
              id[] : *MAXSCRIPT
mas:
   offset: *BLOADO
   flags: OBSOLETE
   upgrade: |
        if self.rpg.lump_exists('palettes.bin'):
            self.rpg.remove_lump ('mas')
            return
        # 6->8bpp transform
        bpp8 = take ([  0,   4,   8,  12,  16,  20,  24,  28,  32,  36,  40,  45,  49,
                       53,  57,  61,  65,  69,  73,  77,  81,  85,  89,  93,  97, 101,
                      105, 109, 113, 117, 121, 125, 130, 134, 138, 142, 146, 150, 154,
                      158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206,
                      210, 215, 219, 223, 227, 231, 235, 239, 243, 247, 251, 255], self)
        final = bpp8.astype ('B').view (dtypes['palettes.bin'])
        d = self.rpg.data ('palettes.bin', shape = 1)
        d[0] = final
        d.flush()
        del d
        self.rpg.remove_lump ('mas')
menuitem.bin:
   owner : RPG
   attrname : menuitem
   fields :
            - membership caption sort_order type subtype tagcond1
              tagcond2 settag toggletag bitsets extra
            - extra : [*SHORT, 3]
              caption : [str16_8, 38]
              bitsets : [bitsets, [16, *BMENUITEM]]
pal:
   owner: rpg
   attrname: pal16
   dtype : [uint8, 16]
   softdep: mas palettes.bin
palettes.bin :
   owner: rpg
   attrname: pal16
   dtype : [*RGB8, 256]
pt0:
   << : *PTMERGE
   attrname: hero
   shape: [8, 32, 20] # 20->40px
   soft_deps: defpal0.bin
pt1:
   << : *PTMERGE
   attrname: enemy_smal
   shape: [1, 34, 17] # 17->34px
   soft_deps: defpal1.bin
pt2:
   << : *PTMERGE
   attrname: enemy_med
   shape: [1, 50, 25] # 25->50px
   soft_deps: defpal2.bin
pt3:
   << : *PTMERGE
   attrname: enemy_big
   shape: [1, 80, 40] # 40->80px
   soft_deps: defpal3.bin
pt4:
   << : *PTMERGE
   attrname: walk
   shape: [8, 20, 10] # 10->20px
   soft_deps: defpal4.bin
pt5:
   << : *PTMERGE
   attrname : weapon
   shape: [2, 24, 12] # 12->24px
   soft_deps: defpal5.bin
pt6:
   << : *PTMERGE
   attrname : attack
   shape: [3, 50, 25] # 25->50px
   soft_deps: defpal6.bin
pt7:
   << : *PTMERGE
   attrname : textbox
   shape: [16, 16, 8] # 8->16px
   soft_deps: defpal7.bin
pt8:
   << : *PTMERGE
   attrname : portrait
   shape: [1, 50, 25] # 25->50px
   soft_deps: defpal8.bin

say:
   owner : RPG
   attrname : textbox
   flags : BINSIZED
   fields :
            - text reserved1 conditional reserved2 bitsets
              choice1 wasted choice2 menuconditional verticalpos
              shrink textcolor bordercolor backdrop music menu
              portraittype portraitpic portraitpal portraitx portraity
              sound
            - '*' : *SHORT
              text : [S38, 8]
              reserved1 : uint8
              conditional :
                 - fields :
                     - jumpto_instead settag fight inn hero1
                       jumpto_after money usedoor item hero2
                     - jumpto_instead:
                          fields:
                             - tagcheck param
                             - tagcheck : *ETAGCHECK
                               param : *ETEXTBOX_BOXORSCRIPT
                       settag:
                          fields:
                             - tagcheck tagsets
                             - tagcheck : *ETAGCHECK
                               tagsets  : [*ETAGSET, 2]
                       formation:
                          fields:
                             - tagcheck formation
                             - tagcheck  : *ETAGCHECK
                               formation : *SHORT
                       inn:
                          fields:
                             - tagcheck param
                             - tagcheck  : *ETAGCHECK
                               param : *ESHOPORINN
                     # XXX hero swap/un/lock FUBARness
                       hero1:
                          fields:
                             - tagcheck add
                             - tagcheck  : *ETAGCHECK
                               add : *EADDHERO
                       jumpto_after:
                          fields:
                             - tagcheck param
                             - tagcheck : *ETAGCHECK
                               param : *ETEXTBOX_BOXORSCRIPT
                       money:
                          fields:
                             - tagcheck amount
                             - tagcheck : *ETAGCHECK
                               amount : *SHORT
                       usedoor:
                          fields:
                             - tagcheck door
                             - tagcheck : *ETAGCHECK
                               amount : *SHORT
                       item:
                          fields:
                             - tagcheck item
                             - tagcheck : *ETAGCHECK
                               amount : *EADDITEM
                       hero2:
                          fields:
                             - swap lock
                             - swap : *ESWAPHERO
                               lock : *ELOCKHERO
              reserved2 : uint8
              bitsets : [bitsets, [8, *BTEXTBOX]]
              choice1 :
                 fields :
                    - choice choice_tag
                    - text : [str8_8, 15]
                      tag : *ETAGSET
              wasted : uint8
              choice2 :
                 fields :
                    - choice choice_tag
                    - text : [str8_8, 15]
                      tag : *ETAGSET
              menuconditional : *ETAGCHECK
              portraitpal :
                 dtype : *SHORT
                 softrange : rpg.pal16

              portraittype : *EPORTRAITTYPE




              #XXX continue here
sho:
   attrname: shopinfo
   fields:
           - name nitems bitsets inncost innscript
